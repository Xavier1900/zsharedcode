#summary JQueryElement 自动填充事件
#labels Phase-Implementation
<font face="microsoft yahei">
=== 代码 ===
{{{
<%@ Page Language="C#" %>

<%@ Register Namespace="zoyobar.shared.panzer.ui.jqueryui" TagPrefix="je" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
	<title>JQueryElement 自动填充事件</title>
	<link rel="stylesheet" href="../css/ui-lightness/jquery-ui-1.8.11.custom.css" />
	<script type="text/javascript" src="../js/jquery-1.5.1.min.js"></script>
	<script type="text/javascript" src="../js/jquery-ui-1.8.11.custom.min.js"></script>
</head>
<body>
	<form id="formJE" runat="server">
	<p id="message1"></p>
	<p id="message2"></p>
	<p id="message3"></p>
	<je:JQueryElement ID="je" runat="server" ElementType="Input" Attribute="type=text"
		CssClass="ui-widget">
		<WidgetSetting Type="autocomplete">
			<%-- 2.3 之前版本的格式
			<Options>
				<je:OptionEdit Type="source" Value="['abc', 'abce', 'abced', 'abcedf']" />
				<je:OptionEdit Type="search" Value="function(event, ui){$('#message').html('搜索中...');}" />
				<je:OptionEdit Type="open" Value="function(event, ui){$('#message').html('打开');}" />
				<je:OptionEdit Type="close" Value="function(event, ui){$('#message').html('关闭');}" />
				<je:OptionEdit Type="select" Value="function(event, ui){$('#message').html('选择');}" />
				<je:OptionEdit Type="change" Value="function(event, ui){$('#message').html('改变');}" />
			</Options>
			--%>
			<AutocompleteSetting Source="['C#', 'C# .NET', 'VB', 'VB .NET', 'Visual Studio', 'Visual Studio 2005', 'Visual Studio 2008', 'Visual Studio 2010']"
			Search="
			function(event, ui){
				$('#message1').html('搜索完毕');
			}
			"
			Open="
			function(event, ui){
				$('#message2').html('打开匹配条目');
			}
			"
			Close="
			function(event, ui){
				$('#message2').html('关闭匹配条目');
			}
			"
			Select="
			function(event, ui){
				$('#message1').html('选择了 ' + ui.item.label);
			}
			"
			Change="
			function(event, ui){
				$('#message3').html((null == ui.item) ? ('没有任何匹配的条目') : ('改变为 ' + ui.item.label));
			}
			"
			></AutocompleteSetting>
		</WidgetSetting>
	</je:JQueryElement>
	<p style="font-size: smaller; text-align: right;">版本 2.5, 讨论, 获取 JQueryElement 最新消息, 请加 QQ 群: 149829251 (JQueryElement 编程).</p>
	<p style="font-size: smaller; text-align: right;">
		<a href="http://code.google.com/p/zsharedcode/wiki/JEAutoCompleteEventDoc">代码解释说明</a>
		<a href="http://code.google.com/p/zsharedcode/wiki/JQueryElement">JQueryElement (JE) 成员参考</a><br />
		JE 是 panzer 项目的一部分, 您可以参考 <a href="http://code.google.com/p/zsharedcode/">http://code.google.com/p/zsharedcode/</a>.<br />
		所有示例源码托管地址: <a href="http://panzer.codeplex.com/">http://panzer.codeplex.com/</a>.
	</p>
	</form>
</body>
</html>
}}}

=== 前提条件 ===
 所有示例代码可以在 http://panzer.codeplex.com/releases/view/61701#DownloadId=212072 下载. 页面需要添加 [http://jqueryui.com/ jQuery UI] 的脚本和样式.

=== 说明 ===
 AutocompleteSetting 的 Search, Open, Close, Select, Change 属性分别表示, 搜索完成, 打开匹配条目, 关闭匹配条目, 选择某个条目, 输入内容改变时的事件. 其中, 在 Change 事件中, 如果输入的内容并不是匹配的条目, 则 ui.item 为 null.

 对于 2.3 之前的版本, 设置 [JQueryElement JQueryElement] 的 WidgetSetting 添加 Type 属性为 search, open, close, select, change, Value 属性为 javascript 函数的 [JQueryUIOptionEdit OptionEdit], 为自动填充添加在搜索, 打开, 关闭, 选择, 改变时的事件.

 _这里仅列出部分代码, 可能需要您自己创建窗口, 页面等._

*注意:* 可以将 javascript 事先写好, 然后在属性中引用.
</font>