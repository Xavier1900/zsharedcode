#summary JQueryElement 示例-登录
#labels Phase-Implementation
<font face="microsoft yahei">
=== login/Default.aspx 代码 ===
{{{
<%--
wiki 成员参考:
http://code.google.com/p/zsharedcode/wiki/JQueryElement
wiki 分析&示例:
http://code.google.com/p/zsharedcode/wiki/JESLoginDoc
JE 是项目 zsharedcode 的一部分, 您可以参考 http://code.google.com/p/zsharedcode/.
所有项目源码托管地址: http://panzer.codeplex.com/.
--%>

<%@ Page Language="C#" %>

<%@ Register Namespace="zoyobar.shared.panzer.ui.jqueryui" TagPrefix="je" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<script runat="server">

</script>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
	<title>登录</title>
	<link rel="stylesheet" href="../../css/ui-lightness/jquery-ui-1.8.11.custom.css" />
	<script type="text/javascript" src="../../js/jquery-1.5.1.min.js"></script>
	<script type="text/javascript" src="../../js/jquery-ui-1.8.11.custom.min.js"></script>
</head>
<body>
	<form id="formLogin" runat="server">
	<input id="name" type="text" />
	<input id="password" type="password" />
	<je:JQueryElement ID="je" runat="server" ElementType="Div">
		<WidgetSetting Type="button">
			<Options>
				<je:OptionEdit Type="label" Value="'登录'" />
			</Options>
			<AjaxSettings>
				<je:AjaxSettingEdit DataType="json" Url="../student/Login.ashx" WidgetEventType="click">
					<Parameters>
						<je:ParameterEdit Name="n" Type="Selector" Value="'#name'" />
						<je:ParameterEdit Name="pw" Type="Selector" Value="'#password'" />
					</Parameters>
					<Events>
						<je:EventEdit Type="error" Value="loginError" />
						<je:EventEdit Type="success" Value="loginSuccess" />
					</Events>
				</je:AjaxSettingEdit>
			</AjaxSettings>
		</WidgetSetting>
	</je:JQueryElement>
	<div id="message">
	</div>
	<je:JQueryScript ID="js" runat="server">
		<Html>
		<script language="javascript" type="text/javascript">
			function loginError(jqXHR, textStatus, errorThrown) {
				var message;

				switch (textStatus) {
					case 'timeout':
						message = '连接超时: ';
						break;

					case 'error':
						message = '错误: ';
						break;

					case 'abort':
						message = '取消: ';
						break;

					case 'parsererror':
						message = '格式错误: ';
						break;

					default:
						return;
				}

				message += (null == errorThrown) ? '...' : errorThrown.toString();

				$('#message').text(message).css('color', '#ff0000');
			}

			function loginSuccess(data, textStatus, jqXHR) {
				var message;
				var color;

				switch (data.result) {
					case 'ok':
						message = '登录成功';
						color = '#009900';
						break;

					case 'fail':
						message = '错误的用户名和密码';
						color = '#ff0000';
						break;

					default:
						return;
				}

				$('#message').text(message).css('color', color);

				if (data.result == 'ok')
					window.location = "/advanced/";

			}
		</script>
		</Html>
	</je:JQueryScript>
	<p>讨论, 获取 JQueryElement 最新消息, 请加 QQ 群: 149829251 (JQueryElement 编程)</p>
	</form>
</body>
</html>
}}}

=== student/Login.ashx 代码 ===
{{{
<%@ WebHandler Language="C#" Class="StudentLogin" %>

using System;
using System.Web;

using LearnDSTableAdapters;

public class StudentLogin : IHttpHandler
{

	public void ProcessRequest ( HttpContext context )
	{
		context.Response.ContentType = "text/javascript";

		string result;

		StudentTableAdapter adapter = new StudentTableAdapter ( );
		
		LearnDS.StudentDataTable table = new LearnDS ( ).Student;

		adapter.FillByUserNamePassword ( table, context.Request["n"], context.Request["pw"] );

		if ( table.Count == 1 )
			result = "ok";
		else
			result = "fail";
			
		context.Response.Write ( "{ \"result\": \"" + result + "\" }" );
	}

	public bool IsReusable
	{
		get { return false; }
	}

}
}}}

=== 前提条件 ===
 所有示例代码可以在 http://panzer.codeplex.com/releases/view/61701#DownloadId=212072 下载. 页面需要添加 [http://jqueryui.com/ jQuery UI] 的脚本和样式.

=== 说明 ===
 Login.aspx 中的 [JQueryElement JQueryElement] 为登录的按钮, 我们为按钮增加了一个 [JQueryUIAjaxSettingEdit AjaxSettingEdit] 设置 Url 为判断登录信息的地址为 Login.ashx, DataType 选择 json, 表示 Login.ashx 将返回 json 格式的数据, WidgetEventType 属性设置为 click, 表示在登录按钮按下时, 将执行 ajax 请求 Login.ashx.

 我们为 Login.ashx 增加了两个参数, 分别取自页面的两个 input, 参数的名称分别命名为 n, pw. 使用了选择器 '#name', '#password' 来选择这两个 input.

 之后, 我们编写了 loginAjaxSuccess 和 loginAjaxError 函数, 来表示 ajax 操作成功和失败的结果.

 Login.ashx 则是判断用户名和密码是否正确, 并返回对应的 json 数据.

 _这里仅列出部分代码, 可能需要您自己创建窗口, 页面等._

=== 使用 ===
 如果需要单独使用 [JQueryElement JQueryElement], 可以下载 [http://zsharedcode.googlecode.com/svn/trunk/zsharedcode/panzer/.code/JQueryElement.all.cs JQueryElement.all.cs].

 如果下载整个 *panzer* 项目, 请参考 [HowToDownloadAndUse 如何下载使用].
</font>