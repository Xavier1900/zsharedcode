#summary JQuery 成员参考
#labels Phase-Design,Phase-Implementation
<font size="2" face="microsoft yahei"><h3>JQuery 成员参考</h3>[http://zsharedcode.googlecode.com/svn/trunk/zsharedcode/panzer/.class/web/JQuery.cs 查看代码]<br />{{{继承: }}}[ScriptHelper panzer.web.ScriptHelper]{{{ }}}<br />{{{JQuery 用于编写构造 jQuery 脚本, 包含了 jQuery 中的方法等.}}}<br /><font color="#003366" size="3"><strong>{{{#ctor}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的空的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建空的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 也可以是脚本中另一个 jQuery 实例, 比如: "myJQuery", 也可以是页面载入的回调函数, 比如: "function(){}", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.String,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 也可以是脚本中另一个 jQuery 实例, 比如: "myJQuery", 也可以是页面载入的回调函数, 比如: "function(){}", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{当 expressionI 是选择器时, expressionII 是一个 DOM 元素, 指定搜索上下文, 比如: "document.body", 当 expressionI 是一段 html 代码时, expressionII 可以是 document 元素, 指定 html 代码创建位置, 比如: "document", 也可以是属性集合, 用来初始化只包含单一元素 html 代码元素, 比如: "{type: 'text'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.String,System.String,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{当 expressionI 是选择器时, expressionII 是一个 DOM 元素, 指定搜索上下文, 比如: "document.body", 当 expressionI 是一段 html 代码时, expressionII 可以是 document 元素, 指定 html 代码创建位置, 比如: "document", 也可以是属性集合, 用来初始化只包含单一元素 html 代码元素, 比如: "{type: 'text'}".}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(}}}[JQuery panzer.web.JQuery]{{{)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{从另一个 JQuery 上创建具有相同 Code 属性的 JQuery 实例.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{jQuery}}}</font> - {{{jQuery 实例, 新实例将复制其 Code 属性.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Add(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{尚未编辑.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{尚未编辑.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AddClass(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行添加样式的 addClass 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是多个样式的名称, 比如: "'box red'", 或者返回样式名称的函数, 比如: "function(i, c){ return 'my_' + i.toString(); }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Attr(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行获取设置属性的 attr 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是属性名称, 比如: "'title'", 也可以是属性集合, 比如: "{type: 'text', title: 'test'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Attr(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行获取设置属性的 attr 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是属性名称, 比如: "'title'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{可以是属性值, 比如: "'just test'", 或者返回属性值的函数, 比如: "function(i, a){ return 'my_' + i.toString(); }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Children}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Children(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{尚未编辑.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Contents}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Copy}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建当前 JQuery 的副本, 拥有相同的 Code 属性.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Create}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的空的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建空的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 也可以是脚本中另一个 jQuery 实例, 比如: "myJQuery", 也可以是页面载入的回调函数, 比如: "function(){}", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.String,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 也可以是脚本中另一个 jQuery 实例, 比如: "myJQuery", 也可以是页面载入的回调函数, 比如: "function(){}", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{当 expressionI 是选择器时, expressionII 是一个 DOM 元素, 指定搜索上下文, 比如: "document.body", 当 expressionI 是一段 html 代码时, expressionII 可以是 document 元素, 指定 html 代码创建位置, 比如: "document", 也可以是属性集合, 用来初始化只包含单一元素 html 代码元素, 比如: "{type: 'text'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.String,System.String,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{当 expressionI 是选择器时, expressionII 是一个 DOM 元素, 指定搜索上下文, 比如: "document.body", 当 expressionI 是一段 html 代码时, expressionII 可以是 document 元素, 指定 html 代码创建位置, 比如: "document", 也可以是属性集合, 用来初始化只包含单一元素 html 代码元素, 比如: "{type: 'text'}".}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(}}}[JQuery panzer.web.JQuery]{{{)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{从另一个 JQuery 上创建具有相同 Code 属性的 JQuery 实例.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{jQuery}}}</font> - {{{jQuery 实例, 新实例将复制其 Code 属性.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{EndLine}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加语句的结尾符号.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Eq(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行按照索引选择元素的 eq 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{元素的索引值, 比如: "0", 如果是 "-1", 则表示最后一个元素.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li><li><font color="#ff0000">{{{expressionI}}}</font> - {{{方法的第 1 个参数的表达式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li><li><font color="#ff0000">{{{expressionI}}}</font> - {{{方法的第 1 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{方法的第 2 个参数的表达式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String,System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li><li><font color="#ff0000">{{{expressionI}}}</font> - {{{方法的第 1 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{方法的第 2 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{方法的第 3 个参数的表达式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String,System.String,System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li><li><font color="#ff0000">{{{expressionI}}}</font> - {{{方法的第 1 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{方法的第 2 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{方法的第 3 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionIV}}}</font> - {{{方法的第 4 个参数的表达式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Filter(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行通过选择器, 测试函数等选择元素的 filter 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'strong'", 也可以是测试函数, 比如: "function(i){return (i == 0) || (i == 4);}", 也可以是 DOM 元素, 比如: "document.getElementById('li51')", 或者是另一个 jQuery 对象, 比如: "$('#li64')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{First}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行选择第一个元素的 first 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Has(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行通过判断子元素是否符合选择器, DOM 元素从而选择元素的 has 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'strong'", 或者是 DOM 元素, 比如: "document.getElementById('li51')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{HasClass(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行判断样式是否存在的 hasClass 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{样式名称, 比如: "'box'", 将判断样式是否存在.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Html}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行获取 innerHTML 的 html 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Html(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行设置 innerHTML 的 html 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是 html 代码, 比如: "'<stong></stong>'", 或者返回 html 代码的函数, 比如: "function(i, h){ return '<stong></stong>'; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Is(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行判断元素是否符合选择器的 is 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{选择器, 比如: "'.box'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Last}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行选择最后一个元素的 last 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Length}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Map(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行对元素使用函数的 map 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{对元素调用的函数, 比如: "function(i, o){ return 'my_' + i.toString(); }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Next}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Not(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行选择不符合条件的元素的 not 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'li'", 也可以是 DOM 元素, 比如: "document.getElementById('li51')", 或者是测试函数, 比如: "function(i){ return i == 3; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{RemoveAttr(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行删除属性的 removeAttr 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{属性的名称, 比如: "'title'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{RemoveClass}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行删除样式的 removeClass 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{RemoveClass(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行删除样式的 removeClass 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{样式的名称, 比如: "'box'", 或者返回样式名称的函数, 比如: "function(i, c){ return 'my_' + i.toString(); }."}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Slice(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行选择某个位置开始到结束范围的元素的 slice 方法的代码, 0 是第 1 个元素, -1 是最后一个元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{开始索引, 比如: "1".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Slice(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行选择某个范围的元素的 slice 方法的代码, 0 是第 1 个元素, -1 是最后一个元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{开始索引, 比如: "1".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{结束索引, 比如: "2", 结束位置的元素不会被选择.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Text}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Text(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{尚未编辑.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ToggleClass(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行切换样式的 toggleClass 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{样式的名称, 比如: "'box'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ToggleClass(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行切换样式的 toggleClass 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{样式的名称, 比如: "'box'", 或者返回样式名称的函数, 比如: "function(i, c){ return 'my_' + i.toString(); }."}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{一个布尔值, 表示添加还是删除样式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Val}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加获取元素值的 val 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Val(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加设置元素值的 val 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{元素值的表达式, 比如: "'my name'", 或者返回元素值的函数, 比如: "function(i, v){ return 'my_' + i.toString(); }."}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Script_1_4_1_Url}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 1.4.1 版本的 jQuery 脚本 zoyobar.googlecode.com 地址.}}}</li><li><strong>类型:</strong> 属性</li></ul><br /><font color="#003366" size="3"><strong>{{{Script_1_4_2_Url}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 1.4.2 版本的 jQuery 脚本官方地址.}}}</li><li><strong>类型:</strong> 属性</li></ul><br /></font>