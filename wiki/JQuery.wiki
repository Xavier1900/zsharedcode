#summary JQuery 成员参考
#labels Phase-Design,Phase-Implementation
<font size="2" face="microsoft yahei"><h3>JQuery 成员参考</h3>[http://zsharedcode.googlecode.com/svn/trunk/zsharedcode/panzer/.class/web/JQuery.cs 查看代码] {{{派生于: }}}[ScriptHelper web.ScriptHelper]{{{ }}}<br />说明: {{{JQuery 用于编写构造 jQuery 脚本, 包含了 jQuery 中的方法等, 支持 1.6 版本. (尚未包含 Effects, Utilities 的部分方法)}}}<br /><font color="#003366" size="3"><strong>{{{#ctor}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的空的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建空的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.Boolean,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{isInstance}}}</font> - {{{是否创建为实例, 为 false, 则创建为 $, 否则为 $().}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 也可以是脚本中另一个 jQuery 实例, 比如: "myJQuery", 也可以是页面载入的回调函数, 比如: "function(){}", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.String,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 也可以是脚本中另一个 jQuery 实例, 比如: "myJQuery", 也可以是页面载入的回调函数, 比如: "function(){}", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{当 expressionI 是选择器时, expressionII 是一个 DOM 元素, 指定搜索上下文, 比如: "document.body", 当 expressionI 是一段 html 代码时, expressionII 可以是 document 元素, 指定 html 代码创建位置, 比如: "document", 也可以是属性集合, 用来初始化只包含单一元素 html 代码元素, 比如: "{type: 'text'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(System.String,System.String,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{当 expressionI 是选择器时, expressionII 是一个 DOM 元素, 指定搜索上下文, 比如: "document.body", 当 expressionI 是一段 html 代码时, expressionII 可以是 document 元素, 指定 html 代码创建位置, 比如: "document", 也可以是属性集合, 用来初始化只包含单一元素 html 代码元素, 比如: "{type: 'text'}".}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{#ctor(}}}[JQuery web.JQuery]{{{)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{从另一个 JQuery 上创建具有相同 Code 属性的 JQuery 实例.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{jQuery}}}</font> - {{{jQuery 实例, 新实例将复制其 Code 属性.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Add(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{合并新的元素和当前 jQuery 中的元素, 生成一个新的 jQuery 对象. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 或者是一段 html 代码, 比如: "'<stong>ok</stong>'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Add(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{合并新的元素和当前 jQuery 中的元素, 生成一个新的 jQuery 对象. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{选择器, 比如: "'body table .red'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{document 元素, 指定选择器搜索的文档.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AddClass(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的包含的页面元素添加新的样式.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回样式名称的表达式, 可以是多个样式的名称, 比如: "'box red'", 或者返回样式名称的函数, 比如: "function(i, c){ return 'my_' + i.toString(); }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{After(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的所有元素之后添加新的内容作为兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')", 还可以是返回 html 代码的函数, 比如: "function(i) { return this.className + i.toString;}". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{After(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的所有元素之后添加新的内容作为兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{作用同第一个参数, 不过以数组的形式存在, 比如: "['<stong>ok</stong>', '<span>ok</span>']".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Ajax(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{执行 ajax 操作, 并返回 jqXHR javascript 对象.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回对象的表达式, 包含 ajax 操作的设置, 比如: "{url: 'js/test.js'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Ajax(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{执行 ajax 操作, 并返回 jqXHR javascript 对象. (需要 1.5 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "'js/test.js'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回对象的表达式, 包含 ajax 操作的设置, 比如: "{url: 'js/test.js'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AjaxComplete(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的元素添加 ajax 请求完成的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回函数的表达式, 比如: "function(e, x, a){alert('ajax');}"}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AjaxError(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的元素添加 ajax 请求失败的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回函数的表达式, 比如: "function(e, g, a, t){alert('ajax');}"}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AjaxSend(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的元素添加 ajax 请求发出的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回函数的表达式, 比如: "function(e, x, a){alert('ajax');}"}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AjaxSetup(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置之后 ajax 操作的默认设置. (需要 1.1 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回对象的表达式, 包含 ajax 操作的设置, 比如: "{url: 'js/test.js'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AjaxStart(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的元素添加第一个 ajax 请求的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回函数的表达式, 比如: "function(){alert('ajax');}"}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AjaxStop(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的元素添加所有 ajax 请求结束的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回函数的表达式, 比如: "function(){alert('ajax');}"}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AjaxSuccess(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的元素添加所有 ajax 请求成功的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回函数的表达式, 比如: "function(e, x, a){alert('ajax');}"}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AndSelf}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{合并 jQuery 匹配到的上一批元素和当前 jQuery 中的元素, 生成一个新的 jQuery 对象. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Append(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的所有元素之后添加新的内容作为子元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')", 还可以是返回 html 代码的函数, 比如: "function(i, h) { return 'old html is ' + h;}". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Append(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的所有元素之后添加新的内容作为子元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{作用同第一个参数, 不过以数组的形式存在, 比如: "['<stong>ok</stong>', '<span>ok</span>']".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{AppendTo(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中包含的元素追加到指定目标之后.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'.red'", 可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Attr(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 jQuery 中包含的第一个元素的属性, 或者设置所有元素的多个属性.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回属性名称的表达式, 比如: "'title'", 也可以是属性集合, 比如: "{type: 'text', title: 'test'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Attr(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置 jQuery 中元素的属性.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是属性名称, 比如: "'title'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回属性名称的表达式, 比如: "'just test'", 或者返回属性值的函数, 比如: "function(i, a){ return 'my_' + i.toString(); }". (如果使用函数需要 1.1 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Before(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的所有元素之前添加新的内容作为兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')", 还可以是返回 html 代码的函数, 比如: "function(i) { return this.className + i.toString;}". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Before(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的所有元素之前添加新的内容作为兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{作用同第一个参数, 不过以数组的形式存在, 比如: "['<stong>ok</stong>', '<span>ok</span>']".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Bind(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加事件. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{包含多个事件的对象, 比如: "{ click: function(){}, mouseover: function(){} }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Bind(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{可以是返回函数的表达式, 比如: "function(){ return false; }", 或者为 "false", 表示停止事件的冒泡. (如果使用 false 需要 1.4.3 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Bind(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{可以是返回函数的表达式, 比如: "function(){ return false; }", 或者为 "false", 表示停止事件的冒泡. (如果使用 false 需要 1.4.3 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Blur}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加失去焦点事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Blur(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加失去焦点的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Blur(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加失去焦点的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Change}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加数据改变事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Change(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加数据改变的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Change(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加数据改变的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Children}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素的第一级子元素, 不包含文本元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Children(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素中符合选择器的第一级子元素, 不包含文本元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Click}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加单击事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Click(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加单击的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Click(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加单击的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Clone}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{复制当前 jQuery 中包含的元素, 对于是否复制元素的事件和数据, 1.5.0 版本默认 true, 低版本和 1.5.1 以及更高版本默认为 false, 不复制元素的子元素的事件和数据.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Clone(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{复制当前 jQuery 中包含的元素, 不复制元素的子元素的事件和数据.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个布尔表达式, 比如: "true", 表示是否复制元素的事件和数据. (1.5.0 版本默认 true, 低版本和 1.5.1 以及更高版本默认为 false)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Clone(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{复制当前 jQuery 中包含的元素. (需要 1.5 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个布尔表达式, 比如: "true", 表示是否复制元素的事件和数据. (1.5.0 版本默认 true, 低版本和 1.5.1 以及更高版本默认为 false)}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{一个布尔表达式, 比如: "true", 表示是否复制元素的子元素的事件和数据.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Closest(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中元素的第一个符合选择器的父元素, 从当前 jQuery 元素开始搜索. (需要 1.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是一个选择器, 比如: "'strong'", 或者选择器的数组, 比如: "['body', 'ul']", 也可以是一个 jQuery, 比如: "__myJQuery", 也可以是 DOM 元素, 比如: "document.getElementById('name')". (如果使用数组需要 1.4 版本以上, 如果使用 jQuery 或者 DOM 元素需要 1.6 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Closest(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中元素的第一个符合选择器的父元素, 从当前 jQuery 元素开始搜索. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是一个选择器, 比如: "'strong'", 或者选择器的数组, 比如: "['body', 'ul']".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回页面元素的表达式, 指定搜索的位置.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Contents}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素的所有子元素, 包含文本和注释. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Copy}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建当前 JQuery 的副本, 拥有相同的 Code 属性.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Create}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的空的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建空的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.Boolean,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{isInstance}}}</font> - {{{是否创建为实例, 为 false, 则创建为 $, 否则为 $().}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 也可以是脚本中另一个 jQuery 实例, 比如: "myJQuery", 也可以是页面载入的回调函数, 比如: "function(){}", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.String,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 也可以是 DOM 元素, 比如: "document.getElementById('myTable')", "[document.getElementById('myTable1'), document.getElementById('myTable2')]", 也可以是脚本中另一个 jQuery 实例, 比如: "myJQuery", 也可以是页面载入的回调函数, 比如: "function(){}", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建使用别名的 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{当 expressionI 是选择器时, expressionII 是一个 DOM 元素, 指定搜索上下文, 比如: "document.body", 当 expressionI 是一段 html 代码时, expressionII 可以是 document 元素, 指定 html 代码创建位置, 比如: "document", 也可以是属性集合, 用来初始化只包含单一元素 html 代码元素, 比如: "{type: 'text'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(System.String,System.String,System.Boolean)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建 JQuery.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是选择器, 比如: "'body table .red'", 或者是一段要添加的 html 代码, 比如: "'<stong></stong>'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{当 expressionI 是选择器时, expressionII 是一个 DOM 元素, 指定搜索上下文, 比如: "document.body", 当 expressionI 是一段 html 代码时, expressionII 可以是 document 元素, 指定 html 代码创建位置, 比如: "document", 也可以是属性集合, 用来初始化只包含单一元素 html 代码元素, 比如: "{type: 'text'}".}}}</li><li><font color="#ff0000">{{{isAlias}}}</font> - {{{是否在脚本中使用 $ 作为 jQuery 的别名.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Create(}}}[JQuery web.JQuery]{{{)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{从另一个 JQuery 上创建具有相同 Code 属性的 JQuery 实例.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{jQuery}}}</font> - {{{jQuery 实例, 新实例将复制其 Code 属性.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Css(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中第一个元素的样式或者设置所有元素的多个样式.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回要获取的样式名称的表达式, 比如: "'color'", 或者要设置的多个样式, 比如: "{'background-color' : '#ddd', 'font-weight' : '', 'color' : 'rgb(0,40,244)'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Css(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置当前 jQuery 中元素的样式.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回要设置的样式名称的表达式, 比如: "'color'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回样式值的表达式, 比如: "'red'", 或者返回值的函数, 比如: "function(i, v){return i.toString() + 'px';}". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{CssHooks}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获得 jQuery 的 cssHooks 属性, 用于设置新的样式规则. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Dblclick}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加双击事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Dblclick(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加双击的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Dblclick(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加双击的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Delegate(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中符合选择器的元素添加事件. (需要 1.4.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{选择元素的选择器, 比如: "'li'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Delegate(System.String,System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中符合选择器的元素添加事件. (需要 1.4.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{选择元素的选择器, 比如: "'li'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionIV}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Detach}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中的元素从页面中删除, 但仍保存在 jQuery 中. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Detach(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中符合选择器的元素从页面中删除, 但仍保存在 jQuery 中. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择删除元素的选择器, 比如: "'li'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Die}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{取消所有使用 live 方法绑定的事件. (需要 1.4.1 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Die(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{取消使用 live 方法绑定的指定事件. (需要 1.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Die(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{取消使用 live 方法绑定的指定事件的某个函数. (需要 1.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "clickfunction", 将取消函数作为事件的处理.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Each(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{对当前 jQuery 中包含的元素执行对应的 javascript 函数.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回函数的表达式, 比如: "function(i, e){ $(e).html(i.toString()); }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Empty}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中元素的子元素从页面中删除, 包含文本.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{End}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将最初搜索的一批元素恢复到 jQuery 中.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{EndLine}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加语句的结尾符号.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Eq(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中指定索引的元素. (需要 1.1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回元素的索引值的表达式, 比如: "0", 如果是 "-1", 则表示最后一个元素. (如果使用负数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Error(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加处理错误的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Error(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加处理错误的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li><li><font color="#ff0000">{{{expressionI}}}</font> - {{{方法的第 1 个参数的表达式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li><li><font color="#ff0000">{{{expressionI}}}</font> - {{{方法的第 1 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{方法的第 2 个参数的表达式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String,System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li><li><font color="#ff0000">{{{expressionI}}}</font> - {{{方法的第 1 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{方法的第 2 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{方法的第 3 个参数的表达式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Execute(System.String,System.String,System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加执行 jQuery 方法的代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{methodName}}}</font> - {{{jQuery 方法名称, 比如: "css".}}}</li><li><font color="#ff0000">{{{expressionI}}}</font> - {{{方法的第 1 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{方法的第 2 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{方法的第 3 个参数的表达式.}}}</li><li><font color="#ff0000">{{{expressionIV}}}</font> - {{{方法的第 4 个参数的表达式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Filter(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{选择当前 jQuery 中符合选择器, 筛选函数, 元素或者 jQuery 中元素的元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'strong'", 也可以是测试函数, 比如: "function(i){return (i == 0) || (i == 4);}", 也可以是 DOM 元素, 比如: "document.getElementById('li51')", 或者是另一个 jQuery 对象, 比如: "$('#li64')". (如果元素或者 jQuery 需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Find(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{选择当前 jQuery 中包含元素的符合选择器的子元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于筛选子元素的选择器, 比如: "'strong'", 也可以是一个 jQuery, 比如: "__myJQuery", 也可以是 DOM 元素, 比如: "document.getElementById('name')". (如果使用 jQuery 或者 DOM 元素需要 1.6 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{First}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{选择当前 jQuery 中第一个元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Focus}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加获取焦点事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Focus(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加获取焦点的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Focus(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加获取焦点的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Get(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 GET 获取请求数据.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "js/test.js".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Get(System.String,System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 GET 获取请求数据.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "js/test.js".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回对象或字符串的表达式, 比如: "{name: 'abc'}", 将传送给服务器.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{返回成功时回调函数的表达式, 比如: "function(d, t, j){alert('ajax');}".}}}</li><li><font color="#ff0000">{{{expressionIV}}}</font> - {{{指定获取数据类型的字符串, "'xml'", "'json'", "'script'", "'html'" 中的一种.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{GetJSON(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 GET 获取请求 json 数据.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "test.aspx".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{GetJSON(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 GET 获取请求 json 数据.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "test.aspx".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回对象或字符串的表达式, 比如: "{name: 'abc'}", 将传送给服务器.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{返回成功时回调函数的表达式, 比如: "function(d, t, j){alert('ajax');}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{GetScript(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 GET 获取请求 javascript 脚本并执行.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "js/test.js".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{GetScript(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 GET 获取请求 javascript 脚本并执行.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "js/test.js".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回成功时回调函数的表达式, 比如: "function(d, t){alert('ajax');}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Has(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{选择 jQuery 中元素, 其子元素符合选择器或者元素. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'strong'", 或者是元素, 比如: "document.getElementById('li51')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{HasClass(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{判断样式是否存在.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回样式名称的表达式, 比如: "'box'", 将判断样式是否存在.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Height}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的高度数值.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Height(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置当前 jQuery 中元素的高度.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个数值的表达式, 比如: "110", 或者一个返回数值的函数, 比如: "function(i, h){ return i + h; }". (如果使用函数需要 1.4.1 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{HoldReady(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{是否让 ready 等待执行. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回布尔值的表达式, 比如: "true", 表示阻止 ready 执行.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Hover(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置当前 jQuery 元素的鼠标进入和离开的事件. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }", 作为鼠标进入和离开的共同事件.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Hover(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置当前 jQuery 元素的鼠标进入和离开的事件. (需要 1.4.1 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }", 作为鼠标进入事件.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }", 作为鼠标离开事件.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Html}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 jQuery 中包含的第一个元素的 innerHTML 属性.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Html(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置 jQuery 中包含元素的 innerHTML 属性.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回 html 代码的表达式, 比如: "'<stong></stong>'", 或者返回 html 代码的函数, 比如: "function(i, h){ return '<stong></stong>'; }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{InnerHeight}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的高度数值, 不包含边框. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{InnerWidth}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的宽度数值, 不包含边框. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{InsertAfter(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中包含的元素添加到目标之后作为兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{InsertBefore(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中包含的元素添加到目标之前作为兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Is(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{判断当前 jQuery 元素是否符合选择器, 如果至少一个符合时, 将在 javascript 中返回 true.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{选择器, 比如: "'.box'", 也可以是一个 jQuery, 比如: "__myJQuery", 也可以是 DOM 元素, 比如: "document.getElementById('name')". (如果使用 jQuery 或者 DOM 元素需要 1.6 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Keydown}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加键盘按下事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Keydown(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加获取键盘按下的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Keydown(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加获取键盘按下的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Keypress}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加键盘按住事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Keypress(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加获取键盘按住的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Keypress(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加获取键盘按住的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Keyup}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加键盘松开事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Keyup(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加获取键盘松开的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Keyup(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加获取键盘松开的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Last}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{选择当前 jQuery 中最后一个元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Length}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{尚未编辑.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Live(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加事件, 可以用 die 方法取消. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{包含多个事件的对象, 比如: "{ click: function(){}, mouseover: function(){} }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Live(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中符合选择器的元素添加事件, 可以用 die 方法取消. (需要 1.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Live(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中符合选择器的元素添加事件, 可以用 die 方法取消. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Load(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加载入的事件, 或者使用 GET 请求 html 代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }", 或者返回地址的表达式, 比如: "'test.html'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Load(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加载入的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Load(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 GET 请求 html 代码.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "'test.html'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回对象或字符串的表达式, 比如: "{name: 'abc'}", 将传送给服务器.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{返回完成时回调函数的表达式, 比如: "function(r, t, x){alert('ajax');}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Map(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{对当前 jQuery 中的元素执行函数, 并将执行的结果返回为一个 javascript 数组. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回调用函数的表达式, 比如: "function(i, o){ return 'my_' + i.toString(); }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Map(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{对一个数组或者对象执行函数.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回对象或者数组的表达式, 比如: "['a', 'b', 'c']". (如果使用对象元素需要 1.6 版本以上)}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(elementOfArray, indexInArray){}" 或者 "function(value, indexOrKey){}". (如果使用后一个函数需要 1.6 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mousedown}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加鼠标按下事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Mousedown(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标按下的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mousedown(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标按下的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseenter}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加鼠标进入事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseenter(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标进入的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseenter(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标进入的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseleave}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加鼠标离开事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseleave(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标离开的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseleave(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标离开的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mousemove}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加鼠标滑动事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Mousemove(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标滑动的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mousemove(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标滑动的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseout}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加鼠标滑出事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseout(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标滑出的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseout(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标滑出的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseover}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加鼠标滑入事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseover(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标滑入的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseover(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标滑入的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseup}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加鼠标松开事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseup(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标松开的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Mouseup(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加鼠标松开的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Next}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的向后的第一个兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Next(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的向后的符合选择器的第一个兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择兄弟元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{NextAll}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的向后的所有兄弟元素. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{NextAll(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的向后的符合选择器的所有兄弟元素. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择兄弟元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{NextUntil}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素向后的所有兄弟元素. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{NextUntil(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素向后的所有兄弟元素, 出现符合选择器的兄弟元素为止, 不包含此符合选择器的兄弟元素. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择兄弟元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{NoConflict}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{卸载 jQuery 在页面中 $ 的定义.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{NoConflict(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{卸载 jQuery 在页面中 $ 的定义.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个返回布尔值的表达式, 比如: "true", "1 > 2" 或者 "isOK", 其中 isOK 是 javascript 脚本中的变量, 如果表达式为 true, 则卸载 $ 和 jQuery 的定义, 否则只卸载 $ 的定义.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Not(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{去除当前 jQuery 中符合条件的元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'strong'", 也可以是测试函数, 比如: "function(i){return (i == 0) || (i == 4);}", 也可以是 DOM 元素, 比如: "document.getElementById('li51')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Offset}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中第一个元素相对于 document 的位置, 返回值保存一个拥有 top 和 left 属性的对象中.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Offset(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置当前 jQuery 中元素相对于 document 的位置.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回具有 top 和 left 属性的对象的表达式, 比如: "{ top: 10, left: 20 }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{OffsetParent}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 jQuery 中包含元素的第一个设置了 position 样式为 relative, absolute 或者 fixed 的父元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{One(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加只执行一次的事件. (需要 1.1 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{OuterHeight}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的高度数值, 包含边框, padding. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{OuterHeight(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的高度数值, 包含边框, padding, 可选 margin. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个布尔表达式, 比如: "true", 指定是否包含 margin, 默认为 false.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{OuterWidth}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的宽度数值, 包含边框, padding. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{OuterWidth(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的宽度数值, 包含边框, padding, 可选 margin. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个布尔表达式, 比如: "true", 指定是否包含 margin, 默认为 false.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Param(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将对象或者数组转化为 url 参数.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{对象或者数组, 比如: "{name: 'abc', age: 12}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Param(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将对象或者数组转化为 url 参数.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{对象或者数组, 比如: "{name: 'abc', age: 12}".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回布尔值的表达式, 比如: "true", 指示是否深度转化.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Parent}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素的第一级父元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Parent(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素的第一级符合选择器的父元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择父元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Parents}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素的所有父元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Parents(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素的所有符合选择器的父元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择父元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ParentsUntil}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的所有父元素. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{ParentsUntil(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的所有父元素, 出现符合选择器的父元素为止, 不包含此符合选择器的父元素. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择父元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Position}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中第一个元素相对于父元素的位置, 返回值保存一个拥有 top 和 left 属性的对象中.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Post(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 POST 获取请求数据.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "js/test.js".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Post(System.String,System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用 POST 获取请求数据.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回地址的表达式, 比如: "js/test.js".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回对象或字符串的表达式, 比如: "{name: 'abc'}", 将传送给服务器.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{返回成功时回调函数的表达式, 比如: "function(d, t, j){alert('ajax');}".}}}</li><li><font color="#ff0000">{{{expressionIV}}}</font> - {{{指定获取数据类型的字符串, "'xml'", "'json'", "'script'", "'html'" 中的一种.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Prepend(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的所有元素之前添加新的内容作为子元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')", 还可以是返回 html 代码的函数, 比如: "function(i, h) { return 'old html is ' + h;}". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Prepend(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{在当前 jQuery 中包含的所有元素之前添加新的内容作为子元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{作用同第一个参数, 不过以数组的形式存在, 比如: "['<stong>ok</stong>', '<span>ok</span>']".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{PrependTo(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中包含的元素追加到指定目标之前.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是选择器, 比如: "'.red'", 可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Prev}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的向前的第一个兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Prev(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的向前的符合选择器的第一个兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择兄弟元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{PrevAll}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的向前的所有兄弟元素. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{PrevAll(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素的向前的符合选择器的所有兄弟元素. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择兄弟元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{PrevUntil}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素向前的所有兄弟元素. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{PrevUntil(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{得到当前 jQuery 中包含元素向前的所有兄弟元素, 出现符合选择器的兄弟元素为止, 不包含此符合选择器的兄弟元素. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择兄弟元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Promise}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{返回承若对象. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Promise(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{返回承若对象. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{观察的类型.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Promise(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{返回承若对象. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{观察的类型.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{承若附加的对象.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Prop(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 jQuery 中包含的第一个元素的属性, 与 Attr 不同的是返回的值不单单为字符串, 或者设置所有元素的多个属性. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回属性名称的表达式, 比如: "'title'", 也可以是属性集合, 比如: "{type: 'text', title: 'test'}".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Prop(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置 jQuery 中元素的属性. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是属性名称, 比如: "'title'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回属性名称的表达式, 比如: "'just test'", 或者返回属性值的函数, 比如: "function(i, a){ return 'my_' + i.toString(); }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Proxy(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{产生新的函数, 并指定新的上下文. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{函数的原型, 比如: "function(){ return this.toString(); }", 如果 expressionII 是函数名称, 也可以是新的上下文的表达式, 比如: "someobj".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{新的上下文的表达式, 比如: "someobj", 如果 expressionI 是上下文的表达式, 也可以是函数名称, 比如: "'test'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Ready(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加当整个页面载入后的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Remove}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中的元素从页面中删除.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Remove(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将当前 jQuery 中符合选择器的元素从页面中删除.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择删除元素的选择器, 比如: "'li'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{RemoveAttr(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{删除 jQuery 中包含的元素的属性.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回属性名称的表达式, 比如: "'title'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{RemoveClass}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{删除 jQuery 中包含的元素的所有样式.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{RemoveClass(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{删除 jQuery 中包含的元素的指定样式.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{返回样式名称的表达式, 比如: "'box'", 或者返回样式名称的函数, 比如: "function(i, c){ return 'my_' + i.toString(); }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{RemoveProp(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{删除通过 Prop 添加的属性. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回属性名称的表达式, 比如: "'title'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{RemoveProp(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{删除通过 Prop 添加的属性. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回属性名称的表达式, 比如: "'title'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{用于匹配属性的值, 比如: "'happy.gif'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ReplaceAll(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用当前 jQuery 中的元素替换符合选择器的元素. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{选择被替换到的元素的选择器, 比如: "'li'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ReplaceWith(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{使用新的元素替换当前 jQuery 中的元素. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong>ok</stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')", 还可以是一个返回元素的函数, 比如: "function(){ document.getElementById('abc') }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Resize}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加大小改变事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Resize(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加大小改变的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Resize(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加大小改变的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Scroll}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加滚动轴事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Scroll(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加滚动轴的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Scroll(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加滚动轴的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ScrollLeft}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的水平滚动轴位置. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{ScrollLeft(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置当前 jQuery 中元素的水平滚动轴位置. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个数值的表达式, 比如: "110".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ScrollTop}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的垂直滚动轴位置. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{ScrollTop(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置当前 jQuery 中元素的垂直滚动轴位置. (需要 1.2.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个数值的表达式, 比如: "110".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Select}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加选择事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Select(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加选择的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Select(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加选择的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Serialize}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将表单中包含的值转化为 url 参数字符串.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{SerializeArray}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{将表单中包含的值转化为数组.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Siblings}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素的所有兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Siblings(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的元素的所有符合选择器的兄弟元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{用于选择兄弟元素的选择器, 比如: "'strong'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Slice(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{选择当前 jQuery 中从某个位置开始到结束范围的元素, 0 是第 1 个元素, -1 是最后一个元素. (需要 1.1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{开始索引, 比如: "1".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Slice(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{选择当前 jQuery 中某个范围的元素, 0 是第 1 个元素, -1 是最后一个元素. (需要 1.1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{开始索引, 比如: "1".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{结束索引, 比如: "2", 结束位置的元素不会被选择.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Sub}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{创建主 jQuery 对象的副本.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Submit}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中的元素的添加提交事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Submit(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加提交的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Submit(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加提交的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Text}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 jQuery 中包含的第一个元素的 innerText 属性.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Text(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置 jQuery 中包含元素的 innerText 属性.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个字符串表达式, 比如: "'this is abc'", 或者返回字符串的函数, 比如: "function(i, t){ return 'old text is ' + t; }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Toggle(System.String,System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为当前 jQuery 元素添加多个点击事件, 将根据点击次数在这些事件中切换.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{同 expressionI, 可以为 null.}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{同 expressionI, 可以为 null.}}}</li><li><font color="#ff0000">{{{expressionIV}}}</font> - {{{同 expressionI, 可以为 null.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ToggleClass(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{切换 jQuery 中包含的元素的样式, 样式存在则删除, 如果不存在则添加.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回样式名称的表达式, 比如: "'box'", 或者返回样式名称的函数, 比如: "function(i, c){ return 'my_' + i.toString(); }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{ToggleClass(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{添加或者删除 jQuery 中包含的元素的样式. (需要 1.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回样式名称的表达式, 比如: "'box'", 或者返回样式名称的函数, 比如: "function(i, c){ return 'my_' + i.toString(); }". (如果使用函数需要 1.4 版本以上)}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回布尔值的表达式, 表示添加还是删除样式.}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Trigger(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中元素的事件. (需要 1.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Trigger(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中元素的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{扩展的参数数组, 比如: "[age: 10, size: 100]".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{TriggerHandler(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{触发 jQuery 中第一个元素的事件, 不引发元素的默认行文. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{扩展的参数数组, 比如: "[age: 10, size: 100]".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Unbind}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素取消所有事件.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Unbind(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素取消事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{可以是事件类型, 比如: "'click'", "'click mouseover'", 也可以是包含多个事件的对象, 比如: "{ click: function(){}, mouseover: function(){} }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Unbind(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素取消事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{可以是返回函数的表达式, 比如: "function(){ return false; }", 或者为 "false", 表示取消停止冒泡的事件. (如果使用 false 需要 1.4.3 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Undelegate}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素取消所有事件. (需要 1.4.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Undelegate(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素取消命名空间下的事件. (需要 1.6 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{事件所在的命名空间, 比如: "'.whatever'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Undelegate(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素取消事件. (需要 1.4.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{选择元素的选择器, 比如: "'li'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Undelegate(System.String,System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素取消事件. (需要 1.4.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{选择元素的选择器, 比如: "'li'".}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{事件的类型, 比如: "'click'", "'click mouseover'".}}}</li><li><font color="#ff0000">{{{expressionIII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Unload(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加卸载的事件.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Unload(System.String,System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为 jQuery 中的元素添加卸载的事件. (需要 1.4.3 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expressionI}}}</font> - {{{一个返回值的表达式, 比如: "{age: 10, name: 'lili'}", 值将传递给事件, 并通过 event.data 访问.}}}</li><li><font color="#ff0000">{{{expressionII}}}</font> - {{{返回函数的表达式, 比如: "function(){ return false; }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Unwrap}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{删除调用 wrap 方法产生的父元素. (需要 1.4 版本以上)}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Val}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 jQuery 中包含的第一个元素的 value 属性.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Val(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置 jQuery 中包含的元素 value 属性.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个表达式, 比如: "'my name'", 或者是一个返回值的函数, 比如: "function(i, v){ return 'my_' + i.toString(); }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{When(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{调用 when 方法, 传递一个或者多个 javascript 对象, 之后可再通过 done, then 等方法编写这些对象载入后的处理方法. (需要 1.5 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个或者多个对象的表达式, 比如: "$.ajax('test.aspx')", 或者 "{ testing: 123 }, { name: 'jack' }".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Width}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取当前 jQuery 中包含的第一个元素的宽度数值.}}}</li><li><strong>类型:</strong> 方法</li></ul><br /><font color="#003366" size="3"><strong>{{{Width(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{设置当前 jQuery 中元素的宽度.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{一个数值的表达式, 比如: "110", 或者一个返回数值的函数, 比如: "function(i, w){ return i + w; }". (如果使用函数需要 1.4.1 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{Wrap(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为当前 jQuery 中的每一个元素添加父元素.}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong></stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')", 还可以是一个返回元素的函数, 比如: "function(i){ return '<div></div>'; }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{WrapAll(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为当前 jQuery 中的元素添加一个共同的父元素. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong></stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')".}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{WrapInner(System.String)}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{为当前 jQuery 中的每一个元素添加一个子元素, 这个子元素包含原来所有的子元素. (需要 1.2 版本以上)}}}</li><li><strong>类型:</strong> 方法</li><li><strong>参数:</strong><ul><li><font color="#ff0000">{{{expression}}}</font> - {{{可以是返回 html 代码的表达式, 比如: "'<stong></stong>'", 也可以是元素, 比如: "document.getElementById('myTable')" 或者是 jQuery 对象, 比如: "$('a')", 还可以是一个返回元素的函数, 比如: "function(){ return '<div></div>'; }". (如果使用函数需要 1.4 版本以上)}}}</li></ul></li></ul><br /><font color="#003366" size="3"><strong>{{{CodeMin}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 jQuery 脚本的压缩版本.}}}</li><li><strong>类型:</strong> 属性</li></ul><br /><font color="#003366" size="3"><strong>{{{Script_1_4_1_Url}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 1.4.1 版本的 jQuery 脚本 zoyobar.googlecode.com 地址.}}}</li><li><strong>类型:</strong> 属性</li></ul><br /><font color="#003366" size="3"><strong>{{{Script_1_4_2_Url}}}</strong></font><br /><ul><li><strong>简介:</strong> {{{获取 1.4.2 版本的 jQuery 脚本官方地址.}}}</li><li><strong>类型:</strong> 属性</li></ul><br /></font>