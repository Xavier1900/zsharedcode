#summary 自动添加脚本和样式
<font face="microsoft yahei">
<font size="1">[http://www.microsofttranslator.com/bv.aspx?from=&to=en&a=http://code.google.com/p/zsharedcode/wiki/ResourceLoader Translate this page]</font>

=== 简介/目录 ===
 请到 [Download 下载资源] 的 JQueryElement 示例下载一节*下载示例代码*, 目录 /resourceloader/Default.aspx.

 视频演示: [http://www.tudou.com/programs/view// www.tudou.com/programs/view//]
 
 本文将说明如何使用 ResourceLoader 为页面添加脚本和样式引用:

  * 准备
  * 定义资源的路径
  * JQuery UI 控件
  * JQPlot 控件
  * 指定需要的脚本和样式
  * 自定义控件

=== 准备 ===
 请确保已经在 [Download 下载资源] 中的 JQueryElement.dll 下载一节下载 JQueryElement 最新的版本.

 请使用指令引用如下的命名空间:
{{{
<%@ Register Assembly="zoyobar.shared.panzer.JQueryElement"
	Namespace="zoyobar.shared.panzer.ui.jqueryui"
	TagPrefix="je" %>
}}}

=== 定义资源的路径 ===
 首先, 需要在 web.config 中定义脚本和样式的路径:
{{{
<appSettings>
	<add key="je.jquery.js" value="<jquery 脚本路径>"/>
	<add key="je.jquery.ui.js" value="<jquery ui 脚本路径>"/>
	<add key="je.jquery.ui.css" value="<jquery ui 样式路径>"/>
	<add key="je.jqplot.excanvas.js" value="<jqplot excanvas 脚本路径>"/>
	<add key="je.jqplot.js" value="<jqplot 脚本路径>"/>

	<add key="je.jqplot.<插件名>.js" value="<jqplot 插件脚本路径>"/>
	...

	<add key="je.jqplot.css" value="<jqplot 样式路径>"/>

	<add key="<自定义关键字>" value="<路径>"/>
</appSettings>


<appSettings>
	<add key="je.jquery.js"
		value="~/js/jquery-1.6.2.min.js"/>
	<add key="je.jquery.ui.js"
		value="~/js/jquery-ui-1.8.15.custom.min.js"/>
	<add key="je.jquery.ui.css"
		value="~/css/smoothness/jquery-ui-1.8.15.custom.css"/>
	<add key="je.jqplot.excanvas.js"
		value="~/js/excanvas.min.js"/>
	<add key="je.jqplot.js"
		value="~/js/jquery.jqplot.min.js"/>

	<add key="je.jqplot.DateAxisRenderer.js"
		value="~/js/plugins/jqplot.dateAxisRenderer.min.js"/>
	...

	<add key="je.jqplot.css"
		value="~/css/jquery.jqplot.min.css"/>

	<add key="my.key" value="~/js/my.js"/>
</appSettings>
}}}
 在 web.config 中, 使用特定的关键字来表示 jQuery, jQuery UI 和 jqplot 的脚本和样式.

 可以加入自定义的关键字来表示自己的文件. 这些关键字将在自定义控件中使用.

=== JQuery UI 控件 ===
 在页面中添加一个 ResourceLoader 控件, 然后再添加类似于按钮的 JQueryElement 控件:
{{{
<head runat="server">
	<title>JQuery UI 控件</title>
</head>

...

<je:ResourceLoader ID="resource" runat="server" />

<je:Button ID="button" runat="server" Label="一个按钮">
</je:Button>
}}}
 在上面的示例中, 不需要添加 jQuery UI 的脚本和样式, 因为 ResourceLoader 将根据需要添加这些脚本和样式.

=== JQPlot 控件 ===
 同样需要添加 ResourceLoader 控件, 但如果使用了某些 jqplot 插件, 还需要另外的设置一些 ResourceLoader 控件属性:
{{{
<je:ResourceLoader ID="resource" runat="server"
	JQPlotDateAxisRenderer="true" />

<je:Plot ID="plot1" runat="server" IsVariable="true">
	<AxesSetting XAxisSetting-Renderer="DateAxisRenderer">
	</AxesSetting>
	<DataSetting>
		<je:Data>
			<je:Point Param1="'2011-1-1'" Param2="300" />
			<je:Point Param1="'2011-1-2'" Param2="320" />
			<je:Point Param1="'2011-1-3'" Param2="340" />
			<je:Point Param1="'2011-1-4'" Param2="400" />
		</je:Data>
	</DataSetting>
</je:Plot>
}}}
 上面的代码中, 使用了 jqplot 的日期轴插件, 因此需要设置 JQPlotDateAxisRenderer 属性为 true.

 关于不同的插件如何设置, 请参考 jqplot 的相关文章.

=== 指定需要的脚本和样式 ===
 可以通过 ResourceLoader 控件的 JQuery, JQueryUI, JQPlot 属性来强制的引用脚本和样式:
{{{
<je:ResourceLoader ID="resource" runat="server"
	JQueryUI="true" />
}}}
 上面的代码中, 设置 JQueryUI 属性为 true, 则页面将引用 jQuery UI 所需的脚本和样式.

=== 自定义控件 ===
 可以为自定义控件指定需要引用的脚本和样式:
{{{
<%@ Control Language="C#" AutoEventWireup="true"
	CodeFile="MyControl1.ascx.cs"
	Inherits="resourceloader_MyControl1" %>
<input type="button" class="my-button"
	onclick="alert(sub(1,2,3));"
	value="1 + 2 - 3" />
}}}

{{{
using zoyobar.shared.panzer.ui.jqueryui;

[Resource ( SingleScript = "my.js", SingleStyle = "my.css" )]
public partial class resourceloader_MyControl1
	: System.Web.UI.UserControl
{
	...
}
}}}
 使用 ResourceAttribute 的 SingleScript 和 SingleStyle 属性可以指定脚本和样式的关键字. 这些关键字在 web.config 中已经指定:
{{{
<appSettings>
	<add key="my.js"
		value="~/resourceloader/mycontrol.js"/>
	<add key="my.css"
		value="~/resourceloader/mycontrol.css"/>

	...

</appSettings>
}}}
 可以指定多个脚本或样式, 使用分号分隔即可. 对于自定义的文件, 关键字的顺序也就是文件的加载顺序.

 也可以使用 MultipleScript 属性来指定所需要的脚本, 如果 MultipleScript 指定的关键字在 web.config 中存在, 则将忽略 SingleScript:
{{{
<%@ Control Language="C#" AutoEventWireup="true"
	CodeFile="MyControl2.ascx.cs"
	Inherits="resourceloader_MyControl2" %>
<input type="button" class="my-button"
	onclick="alert(add(1,2));"
	value="1 + 2" />
}}}

{{{
using zoyobar.shared.panzer.ui.jqueryui;

[Resource ( SingleScript = "my.js", MultipleScript="my1.js", SingleStyle = "my.css" )]
public partial class resourceloader_MyControl2
	: System.Web.UI.UserControl
{
	...
}
}}}

{{{
<appSettings>
	<add key="my.js" value="~/resourceloader/mycontrol.js"/>
	<add key="my1.js" value="~/resourceloader/mycontrol.1.js"/>
	<add key="my2.js" value="~/resourceloader/mycontrol.2.js"/>
	<add key="my.css" value="~/resourceloader/mycontrol.css"/>

	...

</appSettings>
}}}

</font>
